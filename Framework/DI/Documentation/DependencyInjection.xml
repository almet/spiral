<?xml version="1.0"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN" "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">

<chapter>
	<title>Dependency Injection</title>
	<para>
		Spiral dependency injector (DI) has many features that should let
		you use your existing classes without any change and let you manage 
		everything about your objects, since creation to dependencies injection 
		and lifecycle management.
	</para>
	<para>
		Here is the quick list of what is possible to do with Spiral DI. More explaination 
		will be given in the following sections.
	</para>

	<itemizedlist>
		<listitem>
			<para>
				Multiple objects construction processes : "new" operator, factory instance, static factory.
			</para>
		</listitem>
		<listitem>
			<para>
				Injection by constructor or by methods (or both as well).
			</para>
		</listitem>
		<listitem>
			<para>
				Injection of native PHP values (string, int, etc.), constants, class constants, objects, arrays.
			</para>
		</listitem>
		<listitem>
			<para>
				Management of objects scope : singleton or prototype.
			</para>
		</listitem>
		<listitem>
			<para>
				Easy manipulation of objects to inject the result of a method, or an attribute in another object.
			</para>
		</listitem>
		<listitem>
			<para>
				Inheritance system to factorize objects configuration.
			</para>
		</listitem>
		<listitem>
			<para>
				Directly inject the container in container aware objects.
			</para>
		</listitem>
		<listitem>
			<para>
				Notify others parts when objects are created.
			</para>
		</listitem>
		<listitem>
			<para>
				Give multiple names to the same services.
			</para>
		</listitem>
	</itemizedlist>
</chapter>
